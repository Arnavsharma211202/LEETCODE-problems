/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode *reverse(ListNode *head){
        ListNode *curr=head;
        ListNode *prev=NULL;
        ListNode *next=NULL;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head==NULL)
        return head;
        head=reverse(head);
        if(n==1)
        return reverse(head->next);
        ListNode *temp=head;
        int count=1;
        while(temp!=NULL && count<n-1){
            count++;
            temp=temp->next;
        }
        ListNode *del=temp->next;
        temp->next=temp->next->next;
        delete(del);
        return reverse(head);
    }
};
